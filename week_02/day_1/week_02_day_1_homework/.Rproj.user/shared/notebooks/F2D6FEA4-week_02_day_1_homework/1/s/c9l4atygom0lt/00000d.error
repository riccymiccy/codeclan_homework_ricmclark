{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"read_delim(\"data/steam-200k-sample.csv\", delim = \",\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"read_delimited(file, tokenizer, col_names = col_names, col_types = col_types, \n    locale = locale, skip = skip, skip_empty_rows = skip_empty_rows, \n    comment = comment, n_max = n_max, guess_max = guess_max, \n    progress = progress)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"show_cols_spec(spec)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"message(\"Parsed with column specification:\\n\", format(spec, n = n, \n    condense = NULL), appendLF = FALSE)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"format(spec, n = n, condense = NULL)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"format.col_spec(spec, n = n, condense = NULL)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"vapply(seq_along(cols), function(i) {\n    col_funs <- sub(\"^collector_\", \"col_\", class(cols[[i]])[[1]])\n    args <- vapply(cols[[i]], deparse2, character(1), sep = \"\\n    \")\n    args <- paste(names(args), args, sep = \" = \", collapse = \", \") ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"FUN(X[[i]], ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"is_syntactic(col_names)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"make.names(x)","line_number":0}],"message":"Error in make.names(x) : \n  invalid multibyte string at '<b4><8e><e8>\"<44>ata Source\"'\n"}